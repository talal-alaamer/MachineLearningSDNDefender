from djongo import models

# Create your models here.
class PeFile(models.Model):
    sha256 = models.CharField(max_length=64)
    Type = models.CharField(max_length=255)
    Date = models.DateField()
    Time = models.TimeField()
    e_cblp = models.IntegerField()
    e_cp = models.IntegerField()
    e_crlc = models.IntegerField()
    e_cparhdr = models.IntegerField()
    e_minalloc = models.IntegerField()
    e_maxalloc = models.IntegerField()
    e_ss = models.IntegerField()
    e_sp = models.IntegerField()
    e_csum = models.IntegerField()
    e_ip = models.IntegerField()
    e_cs = models.IntegerField()
    e_lfarlc = models.IntegerField()
    e_ovno = models.IntegerField()
    e_oemid = models.IntegerField()
    e_oeminfo = models.IntegerField()
    e_lfanew = models.IntegerField()
    Machine = models.IntegerField()
    NumberOfSections = models.IntegerField()
    PointerToSymbolTable = models.IntegerField()
    NumberOfSymbols = models.IntegerField()
    SizeOfOptionalHeader = models.IntegerField()
    Characteristics = models.IntegerField()
    Magic = models.IntegerField()
    MajorLinkerVersion = models.IntegerField()
    MinorLinkerVersion = models.IntegerField()
    SizeOfCode = models.IntegerField()
    SizeOfInitializedData = models.IntegerField()
    SizeOfUninitializedData = models.IntegerField()
    AddressOfEntryPoint = models.IntegerField()
    BaseOfCode = models.IntegerField()
    ImageBase = models.BigIntegerField()
    SectionAlignment = models.IntegerField()
    FileAlignment = models.IntegerField()
    MajorOperatingSystemVersion = models.IntegerField()
    MinorOperatingSystemVersion = models.IntegerField()
    MajorImageVersion = models.IntegerField()
    MinorImageVersion = models.IntegerField()
    MajorSubsystemVersion = models.IntegerField()
    MinorSubsystemVersion = models.IntegerField()
    Reserved1 = models.IntegerField()
    SizeOfImage = models.IntegerField()
    SizeOfHeaders = models.IntegerField()
    CheckSum = models.IntegerField()
    Subsystem = models.IntegerField()
    DllCharacteristics = models.IntegerField()
    SizeOfStackReserve = models.IntegerField()
    SizeOfHeapReserve = models.IntegerField()
    SizeOfHeapCommit = models.IntegerField()
    LoaderFlags = models.IntegerField()
    text_Misc_VirtualSize = models.IntegerField()
    text_VirtualAddress = models.IntegerField()
    text_SizeOfRawData = models.IntegerField()
    text_PointerToRawData = models.IntegerField()
    text_PointerToRelocations = models.IntegerField()
    text_PointerToLinenumbers = models.IntegerField()
    text_NumberOfRelocations = models.IntegerField()
    text_NumberOfLinenumbers = models.IntegerField()
    text_Characteristics = models.IntegerField()
    data_Misc_VirtualSize = models.IntegerField()
    data_VirtualAddress = models.IntegerField()
    data_SizeOfRawData = models.IntegerField()
    data_PointerToRawData = models.IntegerField()
    data_PointerToRelocations = models.IntegerField()
    data_PointerToLinenumbers = models.IntegerField()
    data_NumberOfRelocations = models.IntegerField()
    data_NumberOfLinenumbers = models.IntegerField()
    data_Characteristics = models.BigIntegerField()
    idata_Misc_VirtualSize = models.IntegerField()
    idata_VirtualAddress = models.IntegerField()
    idata_SizeOfRawData = models.IntegerField()
    idata_PointerToRawData = models.IntegerField()
    idata_PointerToRelocations = models.IntegerField()
    idata_PointerToLinenumbers = models.IntegerField()
    idata_NumberOfRelocations = models.IntegerField()
    idata_NumberOfLinenumbers = models.IntegerField()
    idata_Characteristics = models.IntegerField()
    rsrc_Misc_VirtualSize = models.IntegerField()
    rsrc_VirtualAddress = models.IntegerField()
    rsrc_SizeOfRawData = models.IntegerField()
    rsrc_PointerToRawData = models.IntegerField()
    rsrc_PointerToRelocations = models.IntegerField()
    rsrc_PointerToLinenumbers = models.IntegerField()
    rsrc_NumberOfRelocations = models.IntegerField()
    rsrc_NumberOfLinenumbers = models.IntegerField()
    rsrc_Characteristics = models.IntegerField()
    bss_Misc_VirtualSize = models.IntegerField()
    bss_VirtualAddress = models.IntegerField()
    bss_SizeOfRawData = models.IntegerField()
    bss_PointerToRawData = models.IntegerField()
    bss_Characteristics = models.IntegerField()

    class Meta:
        db_table = 'PeFile'